module.exports.config = {
name: "fbcover",
version: "1.0.0",
hasPermssion: 0,
credits: "Shiron",
description: "T·∫°o ·∫£nh b√¨a tr√™n api taoanhdep c·ªßa D-Jukie",
commandCategory: "photoshop",
usages: "T·∫°o ·∫£nh b√¨a tr√™n api taoanhdep c·ªßa D-Jukie",
cooldowns: 0,
dependencies: {
    "fs-extra": "",
    "request": "",
    "axios": "",
 },
 envConfig: { 
 	'APIKEY': 'LUVMIN'
 }
};
module.exports.run = async function ({ api, args, event, permssion }) {
	const { APIKEY } = global.config[this.config.name];
if ((this.config.credits) != "Shiron") { return api.sendMessage(`[ WARNING ] - Ph√°t hi·ªán credits modules ${this.config.name} ƒë√£ b·ªã thay ƒë·ªïi th√†nh ${this.config.credits} b·ªüi ADMINBOT ${global.config.BOTNAME} üòê D·ª´ng l·∫°i ngay!!!`, event.threadID, event.messageID)}
	const request = require('request');
    const fs = require("fs-extra");
    const axios = require("axios");
    const {
        threadID,
        messageID,
        senderID,
        body
    } = event;
    var io = (await axios.get('https://shiron-official.github.io/apikey-DATA/apikey_module.json')).data;
    	if (!io.fbcover.find(i => i.toString() == APIKEY)) { 
    		return api.sendMessage('‚ö†Ô∏è APIKEY MODULES ƒê√É H·∫æT H·∫†N VUI L√íNG LI√äN H·ªÜ FACEBOOK: https://www.facebook.com/HoangDoGiaNguyenOwO/ ƒê·ªÇ C·∫¨P NH·∫¨T KEY M·ªöI‚ö†Ô∏è', threadID, messageID);
    	}
    if(args[0] == "list"){
      const list = await axios.get("https://hoangdogianguyenofficial.herokuapp.com/taoanhdep/list");
            var page = 1;
            page = parseInt(args[1]) || 1;
            page < -1 ? page = 1 : "";
            var limit = 15;
            var count = list.data.listAnime.length;
            var numPage = Math.ceil(count / limit);
            var msg = [];
            for (var i = limit * (page - 1); i < limit * (page - 1) + limit; i++) {
                if (i >= count) break;
                var nv = list.data.listAnime[i].name;
                msg += `${i+0}. ${nv}\n`
            }
            msg += `Hi·ªán t·∫°i c√≥ ${count} nh√¢n v·∫≠t\nS·ªë trang (${page}/${numPage})\nD√πng ${global.config.PREFIX}fbcover list <s·ªë trang>`;
            return api.sendMessage(msg, event.threadID)
    }
    else {
    return api.sendMessage(`Vui l√≤ng reply tin nh·∫Øn n√†y ƒë·ªÉ nh·∫≠p ID nh√¢n v·∫≠tüòê`, event.threadID, (err, info) => {
        return global.client.handleReply.push({
            type: "characters",
            name: this.config.name,
            author: senderID,
            messageID: info.messageID
        });
    }, event.messageID);
}
}
module.exports.handleReply = async function({ api, event, args, handleReply, client, __GLOBAL, Threads, Users, Currencies }) {
    const axios = require("axios");
    const fs = require("fs-extra");
    const request = require("request");
    var nameSender = (await Users.getData(event.senderID)).name
    var arraytag = [];
        arraytag.push({id: event.senderID, tag: nameSender});
    if (handleReply.author != event.senderID) return;
    const {
        threadID,
        messageID,
        senderID
    } = event;

    switch (handleReply.type) {
        case "characters": { 
        	api.unsendMessage(handleReply.messageID);
        	return api.sendMessage(`üîçB·∫°n ƒë√£ ch·ªçn ID nh√¢n v·∫≠t l√† ${event.body}\n(Reply tin nh·∫Øn n√†y nh·∫≠p v√†o t√™n ch√≠nh c·ªßa b·∫°n)`,threadID , function (err, info) { 
        	  return global.client.handleReply.push({ 
        	  	type: 'subname',
        	  	name: 'fbcover',
        	  	author: senderID,
        	  	characters: event.body,
        	  	messageID: info.messageID
        	  })
        	}, messageID);
        }
        case "subname": { 
        	api.unsendMessage(handleReply.messageID);
        	return api.sendMessage(`üîçB·∫°n ƒë√£ ch·ªçn t√™n ch√≠nh l√† ${event.body}\n(Reply tin nh·∫Øn n√†y nh·∫≠p v√†o t√™n ph·ª• c·ªßa b·∫°n)`,threadID , function (err, info) { 
        		return global.client.handleReply.push({ 
        			type: 'color',
        			name: 'fbcover',
        			author: senderID,
        			characters: handleReply.characters,
        			name_s: event.body,
        			messageID: info.messageID
        		})
        	}, messageID);
        }
        case "color": { 
        	api.unsendMessage(handleReply.messageID);
        	return api.sendMessage(`üîçB·∫°n ƒë√£ ch·ªçn t√™n ph·ª• l√† ${event.body}\nNh·∫≠p m√†u n·ªÅn c·ªßa b·∫°n (l∆∞u √Ω: nh·∫≠p t√™n ti·∫øng anh c·ªßa m√†u - N·∫øu kh√¥ng mu·ªën nh·∫≠p m√†u th√¨ nh·∫≠p "no")\n(Reply tin nh·∫Øn n√†y)`,threadID , function (err, info) {
        		return global.client.handleReply.push({ 
        			type: 'create',
        			name: 'fbcover',
        			author: senderID,
        			characters: handleReply.characters,
        			subname: event.body,
        			name_s: handleReply.name_s,
        			messageID: info.messageID
        		})
        	}, messageID)
        }
        case "create": {
            var nhanvat = handleReply.characters;
            var name = handleReply.name_s;
            var color = event.body;
            var subname = handleReply.subname;
            api.unsendMessage(handleReply.messageID);
            api.sendMessage(`‚è≥ ƒêang kh·ªüi t·∫°o ch∆∞∆°ng tr√¨nh t·∫°o ·∫£nh!`,threadID, (err, info) => {
            setTimeout(() => {
            	api.unsendMessage(info.messageID);
            	var callback = () => api.sendMessage({body:`ƒê√¢y l√† ·∫£nh b√¨a c·ªßa ${nameSender}\nM√£ s·ªë nh√¢n v·∫≠t: ${nhanvat}\nT√™n ch√≠nh: ${name}\nT√™n ph·ª•: ${subname}\nM√†u n·ªÅn: ${color}`,mentions: arraytag,attachment: fs.createReadStream(__dirname + "/cache/fbcover.png")}, event.threadID, () => fs.unlinkSync(__dirname + "/cache/fbcover.png"),event.messageID);
                return request(encodeURI(`https://hoangdogianguyenofficial.herokuapp.com/fbcover/v2?name=${name}&id=${nhanvat}&subname=${subname}&color=${color}`)).pipe(fs.createWriteStream(__dirname + '/cache/fbcover.png')).on('close', () => callback());
            }, 1000);
          }, messageID);
        }
    }
}